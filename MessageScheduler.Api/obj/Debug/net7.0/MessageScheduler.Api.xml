<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MessageScheduler.Api</name>
    </assembly>
    <members>
        <member name="M:MessageScheduler.Api.Controllers.MessagesController.Create(MessageScheduler.Service.Dtos.MessageDto.MessagePostDto)">
            <summary>
            create message
            </summary>
                /// <remarks>
            Sample request:
            
                Post /api/v1/Messages/Create
                {
                   "to":"taghiyev.ahad@gmail.com/123456",
                   "content":"Hello",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Email/Telegram"
                }
            </remarks>
            <response code="200">New message created succeffuly</response>
            <response code="400">Bad request</response>
            <param name="messagePostDto"></param>
            <returns></returns>
        </member>
        <member name="M:MessageScheduler.Api.Controllers.MessagesController.Get(System.Int32)">
            <summary>
            get message
            </summary>
                /// <remarks>
            Sample response:
            
                Get /api/v1/Messages/Get
                {
                   "id":"5"
                   "to":"taghiyev.ahad@gmail.com/123456",
                   "content":"Hello",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Email/Telegram"
                }
            </remarks>
            <response code="200">success</response>
            <response code="400">bad request</response>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MessageScheduler.Api.Controllers.MessagesController.GetMessages">
            <summary>
            get all messages
            </summary>
                /// <remarks>
            Sample response:
            
                Get /api/v1/Messages/GetMessages
                [
                {
                   "id":"5"
                   "to":"taghiyev.ahad@gmail.com/123456",
                   "content":"Hello",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Email"
                },
                 {
                   "id":"6"
                   "to":"nagiyev.nicat@gmail.com/123456",
                   "content":"Good morning",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Telegram"
                }
                ]
            </remarks>
            <response code="200">success</response>
            <returns></returns>
        </member>
        <member name="M:MessageScheduler.Api.Controllers.MessagesController.Update(System.Int32,MessageScheduler.Service.Dtos.MessageDto.MessagePostDto)">
            <summary>
            update message
            </summary>
                /// <remarks>
            Sample request:
            
                Put /api/v1/Messages/Update
                {
                   "to":"taghiyev.ahad@gmail.com/123456",
                   "content":"Hello",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Email/Telegram"
                }
            </remarks>
            <response code="200">New message updated succeffuly</response>
            <response code="400">Bad request</response>
            <response code="404">not found</response>
            <param name="id"></param>
            <param name="messagePostDto"></param>
            <returns></returns>
        </member>
        <member name="M:MessageScheduler.Api.Controllers.MessagesController.DeleteProductById(System.Int32)">
            <summary>
            delete message
            </summary>
                /// <remarks>
            Sample request:
            
                Put /api/v1/Messages/Delete
                {
                   "to":"taghiyev.ahad@gmail.com/123456",
                   "content":"Hello",
                   "sendAt":"2023-05-12T20:52:39.484Z",
                   "method":"Email/Telegram"
                }
            </remarks>
            <response code="200">New message updated succeffuly</response>
            <response code="404">not found</response>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:MessageScheduler.Api.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MessageScheduler.Api.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MessageScheduler.Api.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
